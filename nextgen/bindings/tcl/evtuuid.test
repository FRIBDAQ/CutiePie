#
#  Test for spectcl::evtuuid
#

package require tcltest
package require sqlite3
load .libs/libSpecTclExperiment.so

namespace import ::tcltest::*

proc setup {} {
    set tmpdir  [makeDirectory databases]
    set expfile [file join $tmpdir exp.db]
    set evtfile [file join $tmpdir evt.db]

    set exphandle [::spectcl::expcreate $expfile]
    ::spectcl::run create $exphandle 1 {This is a test title}
    ::spectcl::evtcreate $exphandle 1 $evtfile


    return [list $exphandle $expfile $evtfile]

}

proc cleanup {exphandle expfile evtfile} {
    ::spectcl::expclose $exphandle

    catch {file delete $expfile}
    catch {file delete $evtfile}

}

#---- The tests

test  evtuuid-cmdexists {The command must exist} \
    -body {
	info commands ::spectcl::evtuuid
    } -result ::spectcl::evtuuid

test evtuuid-needparameter {Command must have a parameter that is an argument} \
    -body {
	catch {::spectcl::evtuuid}
    } -result 1

test evtuuid-correcthandletype {Parameter must be an events database handle} \
    -setup {
	set info [setup]
	set i 0
	foreach varname {exphandle expfile evtfile} item $info {
	    set $varname $item
	    incr i
	} 
    } \
    -cleanup {	
	cleanup $exphandle $expfile $evtfile
    } \
    -body {
	catch {::spectcl::evtuuid $exphandle}
    } -result 1

test evtuuid-correctvalue {Get correct value fromt the databse} \
    -setup {
	set info [setup]
	set i 0
	foreach varname {exphandle expfile evtfile} item $info {
	    set $varname $item
	    incr i
	} 
    } \
    -cleanup {	
	cleanup $exphandle $expfile $evtfile
    } \
    -body {
	set evhandle [::spectcl::evtopen $evtfile]
	set uuid1    [::spectcl::evtuuid $evhandle]
	::spectcl::evtclose $evhandle

	sqlite3 db $evtfile
	set uuid2 [db eval {SELECT config_value FROM configuration_values WHERE config_item = 'uuid'}]
	db close

	string compare $uuid1 $uuid2

	
    } -result 0
#---- Reporting.


cleanupTests