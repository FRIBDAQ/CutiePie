#
#  Tests for the ::spectcl::wsOpen command.
#
package require tcltest

load .libs/libSpecTclExperiment.so
namespace import ::tcltest::*

#---------------------- The tests ---------------------

test exists {wsClose command must exist } \
    -body {
	set command [info commands ::spectcl::wsClose]
    } -result ::spectcl::wsClose



test fail_1 {wsClose needs a handle } \
    -body {
	set status [catch ::spectcl::wsClose msg]
	list $status $msg
    } -result [list 1 "Incorrect number of command line parameters"] 

test fail_2 {wsClose needs a handle that's known} \
    -body {
	set status [catch [list ::spectcl::wsClose dummy-handle] msg]
	list $status $msg
    } -result [list 1 "::spectcl::wsClose  - invalid database handle dummy-handle"]

test fail_3 {wsClose needs a handle that's to a workspace} \
    -setup {
	file delete ./exp.db
	set handle [::spectcl::expcreate ./exp.db]
    } \
    -cleanup {
	::spectcl::expclose $handle
	file delete ./exp.db
    } \
    -body { 
	set result [catch [list ::spectcl::wsClose $handle] msg]
	list $result $msg
    } \
    -result [list 1 "NOT_WORKSPACE - The database is not a workspace"]

test ok {wsClose should work if all parameters are right} \
    -setup {
	file delete ./exp.db
	file delete ./ws.db
	set handle [::spectcl::expcreate ./exp.db]
	::spectcl::wsCreate $handle ./ws.db
	set wsHandle [::spectcl::wsOpen ./ws.db]

    } \
    -cleanup {
	::spectcl::expclose $handle
	file delete ./exp.db
	file delete ./ws.db
    } \
    -body {
	set status [catch [list ::spectcl::wsClose $wsHandle] msg]
	if {$result} {
	    set result [list $status $msg]
	} else {
	    set result $status
	}
	set statusu
    } -result 0

cleanupTests